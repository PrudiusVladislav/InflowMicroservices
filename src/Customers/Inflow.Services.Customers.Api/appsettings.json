{
  "app": {
    "name": "Inflow Customers Service",
    "service": "customers-service"
  },
  "consul": {
    "enabled": true,
    "url": "http://localhost:8500",
    "service": "customers-service",
    "address": "host.docker.internal",
    "port": "5010",
    "pingEnabled": true,
    "pingEndpoint": "",
    "pingInterval": 3,
    "removeAfterInterval": 3
  },
  "fabio": {
    "enabled": true,
    "url": "http://localhost:9999",
    "service": "customers-service"
  },
  "httpClient": {
    "type": "fabio",
    "retries": 3,
    "services": {
      "users": "http://localhost:5030"
    },
    "requestMasking": {
      "enabled": true,
      "maskTemplate": "*****"
    },
    "correlationIdHeader": "x-correlation-id"
  },
  "logger": {
    "level": "information",
    "excludePaths": ["/", "/ping", "/metrics"],
    "excludeProperties": [
      "api_key",
      "access_key",
      "ApiKey",
      "ApiSecret",
      "ClientId",
      "ClientSecret",
      "ConnectionString",
      "Password",
      "Email",
      "Login",
      "Secret",
      "Token"
    ],
    "console": {
      "enabled": true
    },
    "elk": {
      "enabled": false,
      "url": "http://localhost:9200"
    },
    "file": {
      "enabled": true,
      "path": "logs/logs.txt",
      "interval": "day"
    },
    "seq": {
      "enabled": true,
      "url": "http://localhost:5341",
      "apiKey": "secret"
    },
    "tags": {}
  },
  "jaeger": {
    "enabled": true,
    "serviceName": "customers",
    "udpHost": "localhost",
    "udpPort": 6831,
    "maxPacketSize": 65000,
    "sampler": "const",
    "excludePaths": ["/", "/ping", "/metrics"]
  },
  "jwt": {
    "certificate": {
      "location": "certs/localhost.cer"
    },
    "validIssuer": "inflow",
    "validateAudience": false,
    "validateIssuer": true,
    "validateLifetime": true
  },
  "postgres": {
    "connectionString": "Host=localhost;Database=inflow-customers;Username=postgres;Password="
  },
  "prometheus": {
    "enabled": true,
    "endpoint": "/metrics"
  },
  "outbox": {
    "enabled": true,
    "type": "sequential",
    "expiry": 3600,
    "intervalMilliseconds": 2000,
    "inboxCollection": "inbox",
    "outboxCollection": "outbox"
  },
  "rabbitMq": {
    "connectionName": "customers-service",
    "retries": 3,
    "retryInterval": 2,
    "conventionsCasing": "snakeCase",
    "logger": {
      "enabled": true
    },
    "username": "guest",
    "password": "guest",
    "virtualHost": "/",
    "port": 5672,
    "hostnames": [
      "localhost"
    ],
    "requestedConnectionTimeout": "00:00:30",
    "requestedHeartbeat": "00:01:00",
    "socketReadTimeout": "00:00:30",
    "socketWriteTimeout": "00:00:30",
    "continuationTimeout": "00:00:20",
    "handshakeContinuationTimeout": "00:00:10",
    "networkRecoveryInterval": "00:00:05",
    "exchange": {
      "declare": true,
      "durable": true,
      "autoDelete": false,
      "type": "topic",
      "name": "customers"
    },
    "queue": {
      "declare": true,
      "durable": true,
      "exclusive": false,
      "autoDelete": false,
      "template": "customers-service/{{exchange}}.{{message}}"
    },
    "deadLetter": {
      "declare": true,
      "durable": true,
      "exclusive": false,
      "autoDelete": false,
      "ttl": 86400000,
      "prefix": "dlx-",
      "suffix": ""
    },
    "context": {
      "enabled": true,
      "header": "message_context"
    },
    "spanContextHeader": "span_context"
  },
  "swagger": {
    "enabled": true,
    "reDocEnabled": true,
    "includeSecurity": true,
    "name": "v1",
    "title": "API",
    "version": "v1",
    "routePrefix": "docs"
  },
  "security": {
    "certificate": {
      "header": "Certificate"
    }
  },
  "vault": {
    "enabled": true,
    "url": "http://localhost:8200",
    "authType": "token",
    "token": "secret",
    "username": "user",
    "password": "secret",
    "kv": {
      "enabled": true,
      "engineVersion": 2,
      "mountPoint": "kv",
      "path": "customers-service/settings"
    },
    "pki": {
      "enabled": true,
      "roleName": "customers-service",
      "commonName": "customers-service.inflow.io"
    }
  }
}